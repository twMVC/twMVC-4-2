<#@ template language="C#" debug="False" hostspecific="true"#>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Diagnostics" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="Common.tt"#>
<#@ include file="T4Toolbox.tt" #>
<#
UserSettings userSettings =
        new UserSettings
        {
            SourceCsdlPath = @"Models/ExampleDB.edmx",
            ReferenceCsdlPaths = new string[] {},
            FullyQualifySystemTypes = true,
            CreateContextAddToMethods = true,
            CamelCaseFields = false,
        };
#>
<#
ApplyUserSettings(userSettings);
if(Errors.HasErrors)
{
    return String.Empty;
}
MetadataLoader loader = new MetadataLoader(this);
MetadataTools ef = new MetadataTools(this);
CodeRegion region = new CodeRegion(this);
CodeGenerationTools code = new CodeGenerationTools(this){FullyQualifySystemTypes = userSettings.FullyQualifySystemTypes, CamelCaseFields = userSettings.CamelCaseFields};

ItemCollection = loader.CreateEdmItemCollection(SourceCsdlPath, ReferenceCsdlPaths.ToArray());
ModelNamespace = loader.GetModelNamespace(SourceCsdlPath);
string namespaceName = code.VsNamespaceSuggestion();
UpdateObjectNamespaceMap(namespaceName);
#>
<#//================ Model Metadata Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){#>
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects.DataClasses;
using System.Web.Mvc;

namespace <#=namespaceName#>
{
[MetadataType(typeof(<#=code.Escape(entity)#>Metadata))]
	<#=Accessibility.ForType(entity)#> <#=code.SpaceAfter(code.AbstractOption(entity))#>partial class <#=code.Escape(entity)#>
	{
		internal sealed class <#=code.Escape(entity)#>Metadata
		{
			<#
			bool first = true;
			foreach (EdmProperty property in entity.Properties.Where(p => p.DeclaringType == entity && p.TypeUsage.EdmType is PrimitiveType))
	        {
				if (first)
		        {
		            WriteLine(string.Empty);
		            first = false;
		        }
	            WritePrimitiveTypeProperty(property, code);
	        }
			foreach (NavigationProperty navProperty in entity.NavigationProperties.Where(n => n.DeclaringType == entity))
        	{
				WriteNavigationTypeProperty(navProperty, code);
			}
			#>
		}
	}
}
<#SaveOutput("Models\\" + code.Escape(entity) + ".cs");}#>
<#//================ Model Metadata End ===================
#>
<#//================ Controller Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace <#=namespaceName#>.Controllers
{
    public class <#=code.Escape(entity)#>Controller : Controller
    {
        private <#=code.Escape(entity)#>Service _<#=code.Escape(entity).ToLower()#>Service = new <#=code.Escape(entity)#>Service();

        public ActionResult Index()
        {
            return View(_<#=code.Escape(entity).ToLower()#>Service.GetAll());
        }

        public ActionResult Create()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Create(<#=code.Escape(entity)#> <#=code.Escape(entity).ToLower()#>)
        {
            _<#=code.Escape(entity).ToLower()#>Service.Create(<#=code.Escape(entity).ToLower()#>);
            return RedirectToAction("Index");
        }

        public ActionResult Edit(int id)
        {
            return View(_<#=code.Escape(entity).ToLower()#>Service.Get(id));
        }

        [HttpPost]
        public ActionResult Edit(int id, <#=code.Escape(entity)#> <#=code.Escape(entity).ToLower()#>)
        {
            var source = _<#=code.Escape(entity).ToLower()#>Service.Get(id);
			<#
				var propertyList = new List<string>();
				foreach (EdmProperty edmProperty in GetUsefulEntityProperty(entity.Properties))
        		{
					propertyList.Add("\"" + code.Escape(edmProperty) + "\"");
				}
			#>

            if (TryUpdateModel(source, new string[] { <#=string.Join(" , ",propertyList.ToArray())#> }))
            {
                _<#=code.Escape(entity).ToLower()#>Service.Update(source);
                return RedirectToAction("Index");
            }
            return View();
        }

        public ActionResult Delete(int id)
        {
            var model = _<#=code.Escape(entity).ToLower()#>Service.Get(id);
            if (model != null)
            {
                _<#=code.Escape(entity).ToLower()#>Service.Delete(model);
            }
            return RedirectToAction("Index");
        }
    }
}
<#SaveOutput("Controllers\\" + code.Escape(entity.Name+"Controller") + ".cs");}#>
<#//================ Controller End ===================
#>
<#//================ View Create Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){#>
@model <#=namespaceName#>.<#=code.Escape(entity)#>
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    <table>
        <tbody>
<#
foreach (EdmProperty edmProperty in GetUsefulEntityProperty(entity.Properties))
{#>
			<tr>
                <td class="tdm">@Html.LabelFor(p => Model.<#=code.Escape(edmProperty)#>)
                </td>
                <td class="tdxl tdleft">
                    @Html.EditorFor(p => Model.<#=code.Escape(edmProperty)#>)
                    @Html.ValidationMessageFor(p => Model.<#=code.Escape(edmProperty)#>)
                </td>
            </tr>
<#}#>
			<tr>
                <td colspan="2" class="bottombar">
                    <input type="button" value="返回" onclick="location.href='/<#=code.Escape(entity)#>/Index';"/>
                    <input type="submit" value="確認送出"/>
                </td>
            </tr>
        </tbody>
    </table>
}
<#SaveOutput("Views\\" + code.Escape(entity.Name) + "\\Create" + ".cshtml");}#>
<#//================ View Create End ===================
#>
<#//================ View Edit Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){#>
@model <#=namespaceName#>.<#=code.Escape(entity)#>
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    <table>
        <tbody>
			<#
				foreach (EdmProperty edmProperty in GetUsefulEntityProperty(entity.Properties))
        		{#>
<tr>
                <td class="tdm">@Html.LabelFor(p => Model.<#=code.Escape(edmProperty)#>)
                </td>
                <td class="tdxl tdleft">
                    @Html.EditorFor(p => Model.<#=code.Escape(edmProperty)#>)
                    @Html.ValidationMessageFor(p => Model.<#=code.Escape(edmProperty)#>)
                </td>
            </tr>	
				<#}
			#>
<tr>
                <td colspan="2" class="bottombar">
                    <input type="button" value="返回" onclick="location.href='/<#=code.Escape(entity)#>/Index';"/>
                    <input type="submit" value="確認送出"/>
                </td>
            </tr>
        </tbody>
    </table>
}
<#SaveOutput("Views\\" + code.Escape(entity.Name) + "\\Edit" + ".cshtml");}#>
<#//================ View Edit End ===================
#>
<#//================ View Index Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){
var viewIndexPropertys = GetUsefulEntityProperty(entity.Properties,"Description","Content");
#>
@model IEnumerable<<#=namespaceName#>.<#=code.Escape(entity.Name)#>>
@{
    ViewBag.Title = "<#=code.Escape(entity.Name)#>";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<table>
    <tr>
        <td colspan="<#=viewIndexPropertys.Count()#>" class="topbar">
        </td>
        <td>
            <input type="button" value="新增" onclick="location.href='/<#=code.Escape(entity.Name)#>/Create';" />
        </td>
    </tr>
    <tr>
		<#
		foreach (EdmProperty edmProperty in viewIndexPropertys)
        {#>
<th><#=TransferChinese(edmProperty.ToString())#></th>
		<#}
		#>
<th></th>
    </tr>
    @foreach (var item in Model)
    {
    <tr>
		<#
		foreach (EdmProperty edmProperty in viewIndexPropertys)
        {#>
<td>@Html.DisplayFor(p => item.<#=edmProperty#>)</td>
		<#}
		#>
<td>
            <a href="@Url.Action("Edit", new { id=item.Id })">編輯</a> | 
            <a href="@Url.Action("Delete", new { id=item.Id })" onclick="if(!confirm('確定要刪除嗎?')){return false;}">刪除</a>
        </td>
    </tr>                   
    }
</table>
<#SaveOutput("Views\\" + code.Escape(entity.Name) + "\\Index" + ".cshtml");}#>
<#//================ View Index End ===================
#>
<#//================ Service Start ===================
#>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>().OrderBy(e => e.Name)){#>
using System;
using System.Collections.Generic;
using System.Linq;

namespace <#=namespaceName#>
{
    public class <#=code.Escape(entity.Name)#>Service : BaseService
    {
        public IEnumerable<<#=code.Escape(entity.Name)#>> GetAll()
        {
            return this.DataContext.<#=code.Escape(entity.Name)#>;
        }

        public <#=code.Escape(entity.Name)#> Get(int id)
        {
            return this.DataContext.<#=code.Escape(entity.Name)#>.FirstOrDefault(p => p.Id == id);
        }

        public void Create(<#=code.Escape(entity.Name)#> <#=code.Escape(entity.Name).ToLower()#>)
        {
            <#=code.Escape(entity.Name).ToLower()#>.CreateTime = DateTime.Now;
            this.DataContext.<#=code.Escape(entity.Name)#>.AddObject(<#=code.Escape(entity.Name).ToLower()#>);
            this.DataContext.SaveChanges();
        }

        public void Update(<#=code.Escape(entity.Name)#> <#=code.Escape(entity.Name).ToLower()#>)
        {
            <#=code.Escape(entity.Name).ToLower()#>.EditTime = DateTime.Now;
            this.DataContext.SaveChanges();
        }

        public void Delete(<#=code.Escape(entity.Name)#> <#=code.Escape(entity.Name).ToLower()#>)
        {
            this.DataContext.<#=code.Escape(entity.Name)#>.DeleteObject(<#=code.Escape(entity.Name).ToLower()#>);
            this.DataContext.SaveChanges();
        }
    }
}
<#SaveOutput("Services\\" + code.Escape(entity.Name) + "Service" + ".cs");}
#>
<#//================ Service End ===================
#>
<#//================ BaseController Start ================
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace <#=namespaceName#>.Controllers
{
    public class BaseController : Controller
    {
        [HttpPost]
        public ActionResult UploadImage(HttpPostedFileBase file)
        {
            var path = "/images/upload/" + file.FileName;
            file.SaveAs(Server.MapPath("~" + path));
            return Content(path);
        }
    }
}

<#
SaveOutput("Controllers\\BaseController.cs");
#>
<#//================ BaseController End ==================
#>
<#//================ BaseService Start ================
#>
using System;
using System.Collections.Generic;
using System.Linq;

namespace <#=namespaceName#>
{
    public class BaseService
    {
        public BaseService()
        {
            _dataContext = new ExampleDBEntities();
        }
        private ExampleDBEntities _dataContext;
        protected ExampleDBEntities DataContext { get { return _dataContext; } }
    }
}

<#
SaveOutput("Services\\BaseService.cs");
#>
<#//================ BaseService End ==================
#>
<# //================ _Layout Start ==================
#>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>2012-08-18 Code Templates實戰開發</title>
    <link href="/Content/reset.css" rel="stylesheet" type="text/css" />
    <link href="/Content/backend-layout.css" rel="stylesheet" type="text/css" />
    <link href="/Content/backend-style.css" rel="stylesheet" type="text/css" />
    <link href="/Scripts/CLEditor1_3_0/jquery.cleditor.css" rel="stylesheet" type="text/css" />
    <link href="/Scripts/uploadify/uploadify.css" rel="stylesheet" type="text/css" />
    <script src="/Scripts/jquery-1.7.2.min.js" type="text/javascript"></script>
    <script src="/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script src="/Scripts/CLEditor1_3_0/jquery.cleditor.min.js" type="text/javascript"></script>
    <script src="/Scripts/uploadify/jquery.uploadify-3.1.min.js" type="text/javascript"></script>
</head>
<body>
    <div id="wrapper">
        <div id="content-wrapper">
            <div id="content-main">
                <h2>@ViewBag.Title</h2>
                @RenderBody()
                <br class="clear" />
            </div>
            <div id="content-sidebar">
                <a href="/"><img src="/images/twmvc_200.png" width="200" height="72" alt="logo" /></a>
                <ol>
                    <li>嗨！</li>
                </ol>
                <ul>
<#foreach (EntityType entity in GetSourceSchemaTypes<EntityType>()){#>
                    <li><a href="@Url.Action("Index","<#=code.Escape(entity)#>")"><#=code.Escape(entity)#></a></li>
<#}#>
                </ul>
                <br class="clear" />
            </div>
            <div id="footer">
                <p class="footerp">© 2011 Jerry All Rights Reserved.</p>
            </div>
        </div>
    </div>
</body>
</html>
<#
SaveOutput("Views\\Shared\\_Layout.cshtml");
#>
<# //================ _Layout End ==================
#>